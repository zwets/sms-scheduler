# Built-in PROD profile settings for SMS Scheduler
#
# The settings in this file override those in the built-in application.properties
# when --spring.profiles.active=prod or SPRING_PROFILES_ACTIVE=prod.  They provide
# defaults for production deployment.
#
# Settings in this file can be overridden in an external application-prod.properties
# file in PWD or PWD/config at run time.

# General Spring Boot Settings
spring.application.name=sms-scheduler

# Embedded Tomcat settings
server.port=8082
#server.servlet.context-path=/
server.tomcat.threads.max=64
server.use-forward-headers=true

# Time zone to use when formmating date-times (default is 'Z' is UTC)
#sms.scheduler.app.time-zone=+03:00

# BPMN process parameters
# Max random delay for initial send (to not burst batches to the backend)
sms.scheduler.config.max-add-jitter=5m
# Max duration to wait for send ack after initial queued send
sms.scheduler.config.ack-send-timeout=20m
# Duration to wait before resending after failure
sms.scheduler.config.wait-after-fail=10m
# Duration to wait for recv ack after sending
sms.scheduler.config.ack-recv-timeout=25h

# Controls output of the processLogger eventListener in the model
#sms.scheduler.diag.processes.enabled=false
#sms.scheduler.diag.processes.detailed=false

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=${spring.application.name}

# Database config
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/smes_prod
#spring.datasource.username=@SET_ME@
#spring.datasource.password=@SET_ME@

# Connection pool (see https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby)
#spring.datasource.hikari.poolName=${spring.application.name}
#spring.datasource.hikari.maxLifetime=600000
#spring.datasource.hikari.idleTimeout=300000
#spring.datasource.hikari.minimumIdle=10
#spring.datasource.hikari.maximumPoolSize=50
#spring.datasource.hikari.connection-test-query=select 1

# REST
#server.error.include-message=always
#server.error.include-stacktrace=on-param
#server.error.include-binding-errors=on-param

# Flowable async settings
#flowable.process.async-executor-activate=true
#flowable.process.async.executor.default-async-job-acquire-wait-time=10s
#flowable.process.async.executor.async-job-lock-time=5m
#flowable.process.async.executor.default-timer-job-acquire-wait-time=10s
#flowable.process.async.executor.timer-lock-time=5m

# Spring task executor
#spring.task.execution.pool.core-size=32
#spring.task.execution.pool.max-size=32
#spring.task.execution.pool.queue-capacity=1000
#spring.task.execution.thread-name-prefix=${spring.application.name}-task-executor-

# Task scheduling
#spring.task.scheduling.pool.size=5

# Actuator endpoint
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=when_authorized
#management.endpoint.health.roles=admins

# Flowable says "needed to force use of JDK proxies instead of using CGLIB"
#spring.aop.proxy-target-class=false
#spring.aop.auto=false

# LOGGING -----------------------------------------------------------------------------------------

# See https://docs.spring.io/spring-boot/docs/2.7.9/reference/html/features.html#features.logging)
#logging.level.root=INFO

# SMS Scheduler
logging.level.it.zwets.sms.scheduler=INFO
logging.level.it.zwets.sms.scheduler.iam=INFO

# Flowable
logging.level.org.flowable=WARN

# Kafka
logging.level.org.apache.kafka=WARN

# Camel
logging.level.org.apache.camel=WARN

# Spring
logging.level.org.springframework=WARN

