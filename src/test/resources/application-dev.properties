# DEV profile settings for SMS scheduler
#
# These settings are in src/test/resources and hence only apply during unit
# test.  They are active by default through spring.profiles.active=dev in
# the default application.properties in the JAR (from src/main/resources).
#
# The spring.profiles.active=dev setting in the default properties makes
# running of the final JAR fails unless test or prod is set.

# General Spring Boot settings
spring.application.name=sms-scheduler-dev

# Embedded Tomcat settings
server.port=8282
#server.servlet.context-path=/
#server.tomcat.threads.max=64
server.use-forward-headers=true

# Time zone to use when formmating date-times (default is 'Z' is UTC)
sms.scheduler.app.time-zone=+03:00

# BPMN process parameters
# Max random delay for initial send (to not burst batches to the backend)
sms.scheduler.config.max-add-jitter=0s
# Max duration to wait for send ack after initial queued send
sms.scheduler.config.ack-send-timeout=2s
# Duration to wait before resending after failure
sms.scheduler.config.wait-after-fail=5s
# Duration to wait for recv ack after sending
sms.scheduler.config.ack-recv-timeout=2s

# Controls output of the processLogger eventListener in the model
sms.scheduler.diag.processes.enabled=true
sms.scheduler.diag.processes.detailed=true

# Kafka
#spring.kafka.bootstrap-servers=localhost:9292
#spring.kafka.consumer.group-id=${spring.application.name}

# Database config
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:mem:sms-scheduler-db
#spring.datasource.username=
#spring.datasource.password=@SET_ME@

# Connection pool (see https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby)
#spring.datasource.hikari.poolName=${spring.application.name}
#spring.datasource.hikari.maxLifetime=600000
#spring.datasource.hikari.idleTimeout=300000
#spring.datasource.hikari.minimumIdle=10
#spring.datasource.hikari.maximumPoolSize=50
#spring.datasource.hikari.connection-test-query=select 1

# REST
#server.error.include-message=always
#server.error.include-stacktrace=on-param
#server.error.include-binding-errors=on-param

# Flowable async settings (speed up a lot for DEV)
#flowable.process.async-executor-activate=true
flowable.process.async.executor.default-async-job-acquire-wait-time=100ms
flowable.process.async.executor.async-job-lock-time=200ms
flowable.process.async.executor.default-timer-job-acquire-wait-time=100ms
flowable.process.async.executor.timer-lock-time=200ms

# Spring task executor
#spring.task.execution.pool.core-size=32
#spring.task.execution.pool.max-size=32
#spring.task.execution.pool.queue-capacity=1000
#spring.task.execution.thread-name-prefix=${spring.application.name}-task-executor-

# Task scheduling
#spring.task.scheduling.pool.size=5

# Actuator endpoint
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=when_authorized
#management.endpoint.health.roles=admins

# Flowable says "needed to force use of JDK proxies instead of using CGLIB"
#spring.aop.proxy-target-class=false
#spring.aop.auto=false

# LOGGING -----------------------------------------------------------------------------------------

# See https://docs.spring.io/spring-boot/docs/2.7.9/reference/html/features.html#features.logging)
#debug=true (same as running with --debug, enables DEBUG level on a number of core loggers)
#trace=true (same as running with --trace, enables TRACE level on a number of core loggers)
logging.level.root=INFO

# SMS Scheduler
logging.level.it.zwets.sms=DEBUG
logging.level.it.zwets.sms.scheduler=DEBUG
logging.level.it.zwets.sms.scheduler.iam=INFO

# Flowable
logging.level.org.flowable=DEBUG
logging.level.org.flowable.admin.conf=INFO
logging.level.org.flowable.admin.domain=INFO
logging.level.org.flowable.app.servlet=INFO
logging.level.org.flowable.app.domain.editor=INFO
logging.level.org.flowable.batch.service.impl=INFO
logging.level.org.flowable.content=INFO
logging.level.org.flowable.engine.impl=INFO
logging.level.org.flowable.engine.common=INFO
logging.level.org.flowable.engine.common.impl=INFO
logging.level.org.flowable.entitylink.service.impl=INFO
logging.level.org.flowable.eventregistry.impl.persistence.entity=INFO
logging.level.org.flowable.eventsubscription.service.impl=INFO
logging.level.org.flowable.form.engine.impl=INFO
logging.level.org.flowable.form.spring.SpringTransactionInterceptor=INFO
logging.level.org.flowable.identitylink.service.impl=INFO
logging.level.org.flowable.idm.engine.impl=INFO
logging.level.org.flowable.idm.spring.SpringTransactionInterceptor=INFO
logging.level.org.flowable.job.service.impl=INFO
logging.level.org.flowable.job.service.impl.asyncexecutor=INFO
logging.level.org.flowable.spring=DEBUG
logging.level.org.flowable.spring.security=DEBUG
logging.level.org.flowable.task.service.impl=INFO
logging.level.org.flowable.variable.service.impl=INFO

# Security

# Kafka
logging.level.org.apache.kafka=INFO

# Camel
logging.level.org.apache.camel=INFO

# Spring
logging.level.org.springframework=INFO
logging.level.org.springframework.jdbc=WARN
logging.level.org.springframework.web.servlet=WARN
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.core=DEBUG
#logging.level.org.springframework.beans.factory=DEBUG
#logging.level.org.springframework.context=DEBUG
#logging.level.org.springframework.web.context=DEBUG
