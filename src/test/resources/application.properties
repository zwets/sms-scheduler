# SMS scheduler

# Common Spring (Boot) Settings
server.port=8081
spring.application.name=sms-scheduler
#server.servlet.context-path=/sms
#debug=false
#trace=false

# SmsScheduler application settings
# Set the time zone to use when formmating date-times (default is 'Z' is UTC)
sms.scheduler.app.time-zone=+03:00

# TESTING settings
flowable.process.async-executor-activate=true
# The time the async job acquisition thread will wait to execute the next acquirement query. This happens when no new async jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
flowable.process.async.executor.default-async-job-acquire-wait-time=200ms
# The amount of time an async job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.
flowable.process.async.executor.async-job-lock-time=500ms
# The time the timer job acquisition thread will wait to execute the next acquirement query. This happens when no new timer jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
flowable.process.async.executor.default-timer-job-acquire-wait-time=200ms
# The amount of time a timer job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.
flowable.process.async.executor.timer-lock-time=500ms
#flowable.process.async.executor.max-async-jobs-due-per-acquisition=1 # ???
#flowable.process.async.executor.default-queue-size-full-wait-time=PT5S # The time the async job (both timer and async continuations) acquisition thread will wait when the queue is full to execute the next query.

# Configuration
# Maximum random delay for initial send if not within now plus one minute (avoid batches going all at the same time)
sms.scheduler.config.max-add-jitter=0s
# Duration to wait for send ack after initial queued send
sms.scheduler.config.ack-send-timeout=2s
# Duration to wait with resend after failure
sms.scheduler.config.wait-after-fail=5s
# Duration to wait for recv ack after sending
sms.scheduler.config.ack-recv-timeout=5s

# SmsScheduler diagnostic settings
# Controls output of the processLogger bean attached to eventListener hooks in the model
sms.scheduler.diag.processes.enabled=true
sms.scheduler.diag.processes.detailed=true
# Controls output of the taskLogger bean attached to taskListener hooks in the model
#sms.scheduler.diag.tasks.enabled=true
#sms.scheduler.diag.tasks.detailed=false

# Database config
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:~/sms/sms-scheduler/flowable-db;AUTO_SERVER=TRUE;AUTO_SERVER_PORT=9091;DB_CLOSE_DELAY=-1
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/flowable
#spring.datasource.username=flowable
#spring.datasource.password=flowable

# Kafka config
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=sms-scheduler
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.listener.missing-topics-fatal=true

# Mail
#flowable.mail.server.default-from=flowable@localhost # The default from address that needs to be used when sending emails.
 # The force to address(es) that would be used when sending out emails instead of the addressee
flowable.mail.server.force-to=io@zwets.it
flowable.mail.server.host=localhost
flowable.mail.server.port=25
#flowable.mail.server.ssl-port=1465 # The SSL port of the mail server.
#flowable.mail.server.use-ssl=false # Sets whether SSL/TLS encryption should be enabled for the SMTP transport upon connection (SMTPS/POPS).
#flowable.mail.server.use-tls=false # Set or disable the STARTTLS encryption.
#flowable.mail.server.username= # The username that needs to be used for the mail server authentication. If empty no authentication would be used.
#flowable.mail.server.password= # The password for the mail server authentication.

# REST
server.error.include-message=always
#server.error.include-stacktrace=on-param
#server.error.include-binding-errors=on-param

# Actuator endpoint
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=when_authorized
management.endpoint.health.roles=admins
#management.endpoint.flowable.cache.time-to-live=0ms # Maximum time that a response can be cached.
#management.endpoint.flowable.enabled=true # Whether to enable the flowable endpoint.
# Add arbitrary properties to the info endpoint
#management.info.env.enabled=true
#info.my-custom-prop=${spring.application.name:unknown}

# Connection pool (see https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby)
spring.datasource.hikari.poolName=${spring.application.name}
spring.datasource.hikari.maxLifetime=600000
spring.datasource.hikari.idleTimeout=300000
spring.datasource.hikari.minimumIdle=10
spring.datasource.hikari.maximumPoolSize=50
spring.datasource.hikari.connection-test-query=select 1

# Default Task Executor (will be used for @Async)
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=10000
spring.task.execution.thread-name-prefix=sms-scheduler-task-executor-

# Task scheduling
spring.task.scheduling.pool.size=5

# Flowable says "needed to force use of JDK proxies instead of using CGLIB"
spring.aop.proxy-target-class=false
spring.aop.auto=false

# Core (Process) https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/FlowableProperties.java
#flowable.check-process-definitions=true # Whether process definitions need to be auto deployed.
#flowable.custom-mybatis-mappers= # The FQN of custom Mybatis mappers that need to be added to the engine.
#flowable.custom-mybatis-x-m-l-mappers= # The location of the custom Mybatis XML Mappers that need to be added to the engine.
#flowable.database-schema= # In some situations you want to set the schema to use for table checks / generation if the database metadata doesn't return that correctly.
#flowable.database-schema-update=true # The strategy that should be used for the database schema.
#flowable.db-history-used=true # Whether db history should be used.
#flowable.deployment-name=SpringBootAutoDeployment # The name of the auto deployment.
#flowable.history-level=audit # The history level that needs to be used.
#flowable.process-definition-location-prefix=classpath*:/processes/ # The folder in which processes need to be searched for auto deployment.
#flowable.process-definition-location-suffixes=**.bpmn20.xml,**.bpmn # The suffixes (extensions) of the files that needs to be deployed from the 'processDefinitionLocationPrefix' location.

# Process https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/process/FlowableProcessProperties.java
#flowable.process.definition-cache-limit=-1 # The maximum amount of process definitions available in the process definition cache. Per default it is -1 (all process definitions).
#flowable.process.enable-safe-xml=true # Enables extra checks on the BPMN xml that is parsed. Unfortunately, this feature is not available on some platforms, hence you need to disable if your platform does not allow the use of StaxSource during XML parsing.
#flowable.process.servlet.load-on-startup=-1 # Load on startup of the Process dispatcher servlet.
#flowable.process.servlet.name=Flowable BPMN Rest API # The name of the Process servlet.
#flowable.process.servlet.path=/process-api # The context path for the Process rest servlet.

# Process Async Executor
#flowable.process.async-executor-activate=true # Whether the async executor should be activated.
#flowable.process.async.executor.async-job-lock-time=PT5M # The amount of time an async job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.
#flowable.process.async.executor.default-async-job-acquire-wait-time=PT10S # The time the async job acquisition thread will wait to execute the next acquirement query. This happens when no new async jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
#flowable.process.async.executor.default-queue-size-full-wait-time=PT5S # The time the async job (both timer and async continuations) acquisition thread will wait when the queue is full to execute the next query.
#flowable.process.async.executor.default-timer-job-acquire-wait-time=PT10S # The time the timer job acquisition thread will wait to execute the next acquirement query. This happens when no new timer jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
#flowable.process.async.executor.max-async-jobs-due-per-acquisition=1 # ???
#flowable.process.async.executor.timer-lock-time=PT5M # The amount of time a timer job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.

# IDM https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/idm/FlowableIdmProperties.java
#flowable.idm.enabled=true # Whether the idm engine needs to be started.
#flowable.idm.password-encoder= # The type of the password encoder that needs to be used.
#flowable.idm.servlet.load-on-startup=-1 # Load on startup of the IDM dispatcher servlet.
#flowable.idm.servlet.name=Flowable IDM Rest API # The name of the IDM servlet.
#flowable.idm.servlet.path=/idm-api # The context path for the IDM rest servlet.

# Flowable Http https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/FlowableHttpProperties.java
#flowable.http.user-system-properties=false # Whether to use system properties (e.g. http.proxyPort).
#flowable.http.connect-timeout=5s # Connect timeout for the http client
#flowable.http.socket-timeout=5s # Socket timeout for the http client
#flowable.http.connection-request-timeout=5s # Connection Request Timeout for the http client
#flowable.http.request-retry-limit=3 # Request retry limit for the http client
#flowable.http.disable-cert-verify=false # Whether to disable certificate validation for the http client

# LOGGING

# See https://docs.spring.io/spring-boot/docs/2.7.9/reference/html/features.html#features.logging)
#debug=true (same as running with --debug, enables DEBUG level on a number of core loggers)
#trace=true (same as running with --trace, enables TRACE level on a number of core loggers)
logging.level.root=INFO
#logging.file.name=
#logging.threshold.file=

# Diagnostic loggers
# Keep at INFO or lower, and regulate using the sms.scheduler.diag.* properties above.
logging.level.it.zwets.sms.scheduler.diag=INFO

# SMS Scheduler
logging.level.it.zwets.sms.scheduler=DEBUG
#logging.level.org.flowable.app.extension=DEBUG
#logging.level.org.flowable.app.extension=DEBUG
## Squelch the noisy mybatis mapper (database query)
#logging.level.it.kcri.mparis.engine.db.mapper=INFO

# Zwets - Flowable
logging.level.org.flowable=DEBUG
logging.level.org.flowable.admin.conf=INFO
logging.level.org.flowable.admin.domain=INFO
logging.level.org.flowable.app.servlet=INFO
logging.level.org.flowable.app.domain.editor=INFO
logging.level.org.flowable.batch.service.impl=INFO
logging.level.org.flowable.content.engine.impl=INFO
logging.level.org.flowable.content.spring.SpringTransactionInterceptor=INFO
logging.level.org.flowable.engine.impl=INFO
logging.level.org.flowable.engine.common=INFO
logging.level.org.flowable.engine.common.impl=INFO
logging.level.org.flowable.entitylink.service.impl=INFO
logging.level.org.flowable.eventregistry.impl.persistence.entity=INFO
logging.level.org.flowable.eventsubscription.service.impl=INFO
logging.level.org.flowable.form.engine.impl=INFO
logging.level.org.flowable.form.spring.SpringTransactionInterceptor=INFO
logging.level.org.flowable.identitylink.service.impl=INFO
logging.level.org.flowable.idm.engine.impl=INFO
logging.level.org.flowable.idm.spring.SpringTransactionInterceptor=INFO
logging.level.org.flowable.job.service.impl=INFO
logging.level.org.flowable.job.service.impl.asyncexecutor=INFO
logging.level.org.flowable.job.service.impl.asyncexecutor.AcquireTimerJobsRunnable=INFO
logging.level.org.flowable.job.service.impl.persistence.entity.TimerJobEntityImpl=INFO
logging.level.org.flowable.job.service.impl.persistence.entity.JobEntityImpl=INFO
logging.level.org.flowable.task.service.impl=INFO
logging.level.org.flowable.variable.service.impl=INFO

# Security
logging.level.org.flowable.spring.security=DEBUG

# Loggers triggered periodically, want to keep at INFO to stop log rolling
logging.level.liquibase=WARN
logging.level.org.flowable.common.engine.impl.db=INFO
logging.level.org.flowable.common.engine.impl.persistence.entity=INFO
logging.level.org.flowable.common.engine.impl.interceptor.LogInterceptor=INFO
logging.level.org.flowable.common.engine.impl.agenda.AbstractAgenda=INFO
logging.level.org.flowable.common.spring.SpringTransactionInterceptor=INFO

# Zwets - Kafka
logging.level.org.apache.kafka=INFO
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.consumer.internals=WARN
# this logs the whole consumer config
logging.level.org.apache.kafka.clients.consumer.ConsumerConfig=WARN

# Zwets - Camel
logging.level.org.flowable.camel=DEBUG
logging.level.org.apache.camel=INFO

# Zwets - ActiveMQ
logging.level.org.apache.activemq=INFO

# Zwets - Spring
logging.level.org.springframework=INFO
logging.level.org.springframework.jdbc=WARN
logging.level.org.springframework.web.servlet=WARN
#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.core=DEBUG
#logging.level.org.springframework.beans.factory=DEBUG
#logging.level.org.springframework.context=DEBUG
#logging.level.org.springframework.web.context=DEBUG

# ARCHIVED FOR REFERENCE

# CMMN https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/cmmn/FlowableCmmnProperties.java
#flowable.cmmn.deploy-resources=true # Whether to perform deployment of resources, default is 'true'.
#flowable.cmmn.deployment-name=SpringBootAutoDeployment # The name of the deployment for the CMMN resources.
#flowable.cmmn.enable-safe-xml=true # Enables extra checks on the DMN xml that is parsed. Unfortunately, this feature is not available on some platforms, hence you need to disable if your platform does not allow the use of StaxSource during XML parsing.
#flowable.cmmn.enabled=true # Whether the CMMN engine needs to be started.
#flowable.cmmn.resource-location=classpath*:/cases/ # The location where the CMMN resources are located.
#flowable.cmmn.resource-suffixes=**.cmmn,**.cmmn11,**.cmmn.xml,**.cmmn11.xml # The suffixes for the resources that need to be scanned.
#flowable.cmmn.servlet.load-on-startup=-1 # Load on startup of the CMMN dispatcher servlet.
#flowable.cmmn.servlet.name=Flowable CMMN Rest API # The name of the CMMN servlet.
#flowable.cmmn.servlet.path=/cmmn-api # The context path for the CMMN rest servlet.

# CMMN Async Executor
#flowable.cmmn.async-executor-activate=true # Whether the async executor should be activated.
#flowable.cmmn.async.executor.async-job-lock-time=PT5M # The amount of time an async job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.
#flowable.cmmn.async.executor.default-async-job-acquire-wait-time=PT10S # The time the async job acquisition thread will wait to execute the next acquirement query. This happens when no new async jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
#flowable.cmmn.async.executor.default-queue-size-full-wait-time=PT5S # The time the async job (both timer and async continuations) acquisition thread will wait when the queue is full to execute the next query.
#flowable.cmmn.async.executor.default-timer-job-acquire-wait-time=PT10S # The time the timer job acquisition thread will wait to execute the next acquirement query. This happens when no new timer jobs were found or when less async jobs have been fetched. Default value = 10 seconds.
#flowable.cmmn.async.executor.max-async-jobs-due-per-acquisition=1 # ???
#flowable.cmmn.async.executor.timer-lock-time=PT5M # The amount of time a timer job is locked when acquired by the async executor. During this period of time, no other async executor will try to acquire and lock this job.

# DMN https://github.com/flowable/flowable-engine/tree/main/modules/flowable-spring-boot/flowable-spring-boot-starters/flowable-spring-boot-autoconfigure/src/main/java/org/flowable/spring/boot/dmn/FlowableDmnProperties.java
#flowable.dmn.deploy-resources=true # Whether to perform deployment of resources, default is 'true'.
#flowable.dmn.deployment-name=SpringBootAutoDeployment # The name of the deployment for the dmn resources.
#flowable.dmn.enable-safe-xml=true # Enables extra checks on the DMN xml that is parsed. Unfortunately, this feature is not available on some platforms, hence you need to disable if your platform does not allow the use of StaxSource during XML parsing.
#flowable.dmn.enabled=true # Whether the dmn engine needs to be started.
#flowable.dmn.history-enabled=true # Whether the history for the DMN engine should be enabled.
#flowable.dmn.resource-location=classpath*:/dmn/ # The location where the dmn resources are located.
#flowable.dmn.resource-suffixes=**.dmn,**.dmn.xml,**.dmn11,**.dmn11.xml # The suffixes for the resources that need to be scanned.
#flowable.dmn.servlet.load-on-startup=-1 # Load on startup of the DMN dispatcher servlet.
#flowable.dmn.servlet.name=Flowable DMN Rest API # The name of the DMN servlet.
#flowable.dmn.servlet.path=/dmn-api # The context path for the DMN rest servlet.
#flowable.dmn.strict-mode=true # Set this to false if you want to ignore the decision table hit policy validity checks to result in an failed decision table state. A result is that intermediate results created up to the point the validation error occurs are returned.

# Task App
# flowable.task.app.kafka-enabled=true

# Spring Boot has advanced property conversion
# - Durations: java.time.Duration parsed as
#   - default long (milliseconds unless @DurationUnit(ChronoUnit.SECONDS)
#   - standard ISO-8601: P(n)Y(n)M(n)DT(n)H(n)M(n)S, so PT10S for 10s
#   - simplified colloquial: 10s
# - Periods: java.time.Period parsed as
#   - default int (days unless @PeriodUnit(
#   - standard ISO-8601: PnYnMnD and PnW
#   - simplified: 10y1m2w1d
#
# Spring Boot attempts to coerce the external application properties to the right type
# when it binds to the @ConfigurationProperties beans. If you need custom type conversion,
# you can provide a ConversionService bean (with a bean named conversionService) or custom
# property editors (through a CustomEditorConfigurer bean) or custom Converters (with bean
# definitions annotated as @ConfigurationPropertiesBinding).
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.typesafe-configuration-properties.conversion


